nameOverride: ""

subcharts:
  ingestion-nodepowerlevel: true
  ingestion-podpowerlevel: true
  query: true
  dashboard: false

#############################################################

ingestion-nodepowerlevel:

  replicaCount: 1

  containerName: ""

  image:
    registry: quay.io
    username: zagaos
    name: zagaobserve-sustain-pyiceberg-ingestion
    pullPolicy: IfNotPresent
    tag: latest
    strategy: ""

  languageFramework: python

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""



  podAnnotations: {}

  podSecurityContext: {}


  serviceAccount:
    create: false
    annotations: {}
    name: ""


  securityContext: {}



  ports: {}


  service:
    - enabled: false
      serviceType: ClusterIP
      name: ingestion-nodepoewrlevel

    - enabled: false
      serviceType: LoadBalancer
      name: ingestion-nodepoewrlevel-lb



  secretsEnv: {}

  configmapEnv:
    - name: ""
      mount: ""
      mountPath: ""
      data:
        ACCESS_KEY: minioAdmin
        KAFKA_BOOTSTRAP_SERVER: 'telemetry-kafka-bootstrap.observability-kafka.svc.cluster.local:9092'
        URI: 'thrift://hive-metastore.observability-datamesh.svc.cluster.local:9083'
        S3_ENDPOINT: 'http://minio.observability-datamesh.svc.cluster.local:9000'
        SECRET_KEY: minio1234
        TABLE_NAME: node
        NAME_SPACE: sustainability_node
        CONSUMER_GROUP_ID: sustain
        SCRIPT_TO_RUN: nodepowerlevel
        KAFKA_TOPIC: nodepowerlevel
        MINIO_BUCKET: powerlevel-node
        BUCKET_NAME: s3a://powerlevel-node/powerdata
        SSL: True

  probes:
    readiness:

    liveness:

  volumes: {}

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

#############################################################

ingestion-podpowerlevel:

  replicaCount: 1

  containerName: ""

  image:
    registry: quay.io
    username: zagaos
    name: zagaobserve-sustain-pyiceberg-ingestion
    pullPolicy: IfNotPresent
    tag: latest
    strategy: ""

  languageFramework: python


  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""


  podAnnotations: {}

  podSecurityContext: {}


  serviceAccount:
    create: false
    annotations: {}
    name: ""



  securityContext: {}


  ports: {}


  service:
    - enabled: false
      serviceType: ClusterIP
    - enabled: false
      serviceType: LoadBalancer


  secretsEnv: {}

  configmapEnv:
    - name: ""
      mount: ""
      mountPath: ""
      data:
        ACCESS_KEY: minioAdmin
        KAFKA_BOOTSTRAP_SERVER: 'telemetry-kafka-bootstrap.observability-kafka.svc.cluster.local:9092'
        URI: 'thrift://hive-metastore.observability-datamesh.svc.cluster.local:9083'
        S3_ENDPOINT: 'http://minio.observability-datamesh.svc.cluster.local:9000'
        SECRET_KEY: minio1234
        BUCKET_NAME: 's3a://powerlevel-data/powerdatas'
        CONSUMER_GROUP_ID: sustain
        KAFKA_TOPIC: containerpowerlevel
        NAME_SPACE: sustainability_pod
        SCRIPT_TO_RUN: podpowerlevel
        TABLE_NAME: pod
        SSL: False
        MINIO_BUCKET: powerlevel-data

  probes:
    readiness:

    liveness:


  volumes: {}

  resources: {}

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}


#############################################################

query:

  replicaCount: 1

  containerName: ""

  image:
    registry: quay.io
    username: zagaos
    name: zagaobserve-sustain-trino-query
    pullPolicy: IfNotPresent
    tag: latest
    strategy: ""
  languageFramework: python


  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}


  serviceAccount:
    create: false
    annotations: {}
    name: ""

  ports:
    - name: http
      subdomainName: sustainability-query
      port: 8000
      protocol: TCP
      targetPort: 8000
      routePolicy:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect


  service:
    - enabled: true
      serviceType: ClusterIP
      name: sustainability-query

    - enabled: false
      serviceType: LoadBalancer
      name: sustainability-query-lb


  routes:
    enabled: true
    tls: true
    annotations: {}

  ingress:
    enabled: false
    className: ""
    tls: false
    annotations: {}


  secretsEnv: {}


  configmapEnv:
    - name: ""
      data:
        SUSTAIN_TABLE_NAME: iceberg.sustainability_pod.pod
        NODE_TABLE_NAME: iceberg.sustainability_node.node
        TRINO_HOST: admin@trino-coordinator.observability-datamesh.svc.cluster.local:8080

        

  probes:
    readiness:
    liveness:

  volumes: {}



  resources: 
    limits:
      cpu: 450m
      memory: 3Gi
    requests:
      cpu: 400m
      memory: 2Gi


  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80



  nodeSelector: {}

  tolerations: []

  affinity: {}

#############################################################

dashboard:

  replicaCount: 1

  containerName: ""

  image:
    registry: quay.io
    username: zagaos
    name: sustainability-dashboard-pyiceberg
    pullPolicy: IfNotPresent
    tag: "v7"
    strategc10af7cy: ""
  languageFramework: react

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}


  serviceAccount:
    create: false
    annotations: {}
    name: ""

  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
      subdomainName: sustainability-dashboard
      routePolicy:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect

  service:
    - enabled: true
      serviceType: ClusterIP
      name: sustainability-dashboard

    - enabled: false
      serviceType: LoadBalancer
      name: sustainability-dashboard-lb

  routes:
    enabled: true
    tls: true
    annotations: {}


  ingress:
    enabled: false
    className: ""
    tls: false
    annotations: {}
      # cert-manager.io/cluster-issuer: zagaadmin-cluster-issuer



  secretsEnv: {}


  configmapEnv: {}

  probes:
    readiness:
    liveness:

  volumes: {}

  resources: 
    limits:
      cpu: 350m
      memory: 3Gi
    requests:
      cpu: 300m
      memory: 2Gi


  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80


  nodeSelector: {}

  tolerations: []

  affinity: {}

#############################################################
